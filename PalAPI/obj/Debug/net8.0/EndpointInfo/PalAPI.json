{
  "openapi": "3.0.1",
  "info": {
    "title": "PalRide API",
    "version": "v1"
  },
  "paths": {
    "/api/admin/auth/login": {
      "post": {
        "tags": [
          "AdminAuth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDtos"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDtos"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDtos"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/notifications/create": {
      "post": {
        "tags": [
          "AdminNotification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/notifications/create-bulk": {
      "post": {
        "tags": [
          "AdminNotification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/notifications/user/{userId}": {
      "get": {
        "tags": [
          "AdminNotification"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDtos"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDtos"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDtos"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/google-login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/google-login-url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/verify-otp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/resend-otp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOtpDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOtpDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOtpDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/update/{userId}": {
      "put": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/delete/{email}": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/{userId}/active": {
      "put": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/change-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/profile": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/test-roles": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/trip/{tripId}/vouchers": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "seatCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "fullRide",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/quote": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingQuoteRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingQuoteRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingQuoteRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/confirm": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmBookingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmBookingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/{bookingId}/accept": {
      "put": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/{bookingId}/cancel": {
      "put": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/my-bookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/my-bookings/history": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/trip/{tripId}/bookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Chat/send": {
      "post": {
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chat/history/{tripId}": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChatHistoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatHistoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chat/list": {
      "get": {
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Chat/mark-read": {
      "post": {
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsReadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsReadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsReadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Chat/unread-count": {
      "get": {
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chat/typing": {
      "post": {
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TypingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TypingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reports": {
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reports/{reportId}": {
      "put": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reports/all": {
      "get": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReporterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ReportedUserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reports/my-reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reports/stats": {
      "get": {
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reports/status/{status}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews/{reviewId}": {
      "put": {
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews/summary/{userId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews/user/{userId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Rating",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews/stats/{userId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Reviews/trip/{tripId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/register": {
      "post": {
        "tags": [
          "Routes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRouteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRouteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRouteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/{routeId}": {
      "put": {
        "tags": [
          "Routes"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRouteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRouteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRouteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Routes"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Routes"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Routes/my-routes": {
      "get": {
        "tags": [
          "Routes"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips": {
      "post": {
        "tags": [
          "Trips"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/search": {
      "get": {
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "PickupLocation",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DropoffLocation",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/requests": {
      "get": {
        "tags": [
          "Trips"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/requests/search": {
      "get": {
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "PickupLocation",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DropoffLocation",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/accept-request": {
      "post": {
        "tags": [
          "Trips"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptPassengerRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptPassengerRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptPassengerRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/{tripId}": {
      "put": {
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTripDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTripDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTripDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/price-range": {
      "get": {
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "pickup",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dropoff",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/request": {
      "post": {
        "tags": [
          "Trips"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassengerRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassengerRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassengerRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/request/{tripId}/withdraw": {
      "put": {
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/my-trips": {
      "get": {
        "tags": [
          "Trips"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/my-trips/history": {
      "get": {
        "tags": [
          "Trips"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/{tripId}/cancel": {
      "put": {
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trips/{tripId}/complete": {
      "put": {
        "tags": [
          "Trips"
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications/my": {
      "get": {
        "tags": [
          "UserNotification"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications/{notificationId}/read": {
      "put": {
        "tags": [
          "UserNotification"
        ],
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications/read-all": {
      "put": {
        "tags": [
          "UserNotification"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notifications/unread-count": {
      "get": {
        "tags": [
          "UserNotification"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicles": {
      "post": {
        "tags": [
          "Vehicles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVehicleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVehicleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddVehicleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicles/my": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicles/{vehicleId}": {
      "put": {
        "tags": [
          "Vehicles"
        ],
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicles/{vehicleId}/verify": {
      "put": {
        "tags": [
          "Vehicles"
        ],
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyVehicleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyVehicleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyVehicleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vouchers": {
      "post": {
        "tags": [
          "Vouchers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVoucherDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVoucherDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVoucherDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vouchers/{voucherId}": {
      "put": {
        "tags": [
          "Vouchers"
        ],
        "parameters": [
          {
            "name": "voucherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVoucherDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVoucherDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVoucherDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Vouchers"
        ],
        "parameters": [
          {
            "name": "voucherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Vouchers"
        ],
        "parameters": [
          {
            "name": "voucherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vouchers/all": {
      "get": {
        "tags": [
          "Vouchers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vouchers/active": {
      "get": {
        "tags": [
          "Vouchers"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Wallet/driver/summary": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AcceptPassengerRequestDto": {
        "type": "object",
        "properties": {
          "requestTripId": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pricePerSeat": {
            "type": "number",
            "format": "double"
          },
          "priceFullRide": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddVehicleDto": {
        "type": "object",
        "properties": {
          "licensePlate": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "seatCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BookingQuoteRequestDto": {
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "seatCount": {
            "type": "integer",
            "format": "int32"
          },
          "fullRide": {
            "type": "boolean"
          },
          "voucherCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatHistoryDto": {
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "tripInfo": {
            "type": "string",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageDto"
            },
            "nullable": true
          },
          "otherUserId": {
            "type": "integer",
            "format": "int32"
          },
          "otherUserName": {
            "type": "string",
            "nullable": true
          },
          "otherUserRole": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatListDto": {
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "tripInfo": {
            "type": "string",
            "nullable": true
          },
          "otherUserId": {
            "type": "integer",
            "format": "int32"
          },
          "otherUserName": {
            "type": "string",
            "nullable": true
          },
          "otherUserRole": {
            "type": "string",
            "nullable": true
          },
          "lastMessage": {
            "type": "string",
            "nullable": true
          },
          "lastMessageTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hasUnreadMessages": {
            "type": "boolean"
          },
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConfirmBookingDto": {
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "seatCount": {
            "type": "integer",
            "format": "int32"
          },
          "fullRide": {
            "type": "boolean"
          },
          "voucherCode": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBulkNotificationDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "targetUserIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "relatedEntityType": {
            "type": "string",
            "nullable": true
          },
          "relatedEntityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateNotificationDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "targetRole": {
            "type": "string",
            "nullable": true
          },
          "targetUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relatedEntityType": {
            "type": "string",
            "nullable": true
          },
          "relatedEntityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePassengerRequestDto": {
        "type": "object",
        "properties": {
          "pickupLocation": {
            "type": "string",
            "nullable": true
          },
          "dropoffLocation": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "seatCount": {
            "type": "integer",
            "format": "int32"
          },
          "fullRide": {
            "type": "boolean"
          },
          "offeredPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateReportDto": {
        "required": [
          "reason",
          "reportedUserId"
        ],
        "type": "object",
        "properties": {
          "reportedUserId": {
            "type": "integer",
            "format": "int32"
          },
          "tripId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "details": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateReviewDto": {
        "required": [
          "rating",
          "toUserId",
          "tripId"
        ],
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "toUserId": {
            "type": "integer",
            "format": "int32"
          },
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateRouteDto": {
        "required": [
          "dropoffLocation",
          "pickupLocation"
        ],
        "type": "object",
        "properties": {
          "pickupLocation": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "dropoffLocation": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "isRoundTrip": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateTripDto": {
        "type": "object",
        "properties": {
          "pickupLocation": {
            "type": "string",
            "nullable": true
          },
          "dropoffLocation": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "pricePerSeat": {
            "type": "number",
            "format": "double"
          },
          "priceFullRide": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "seatTotal": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateVoucherDto": {
        "required": [
          "code",
          "discountType",
          "discountValue"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "discountValue": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "minOrderValue": {
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "usageLimit": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "onlyVip": {
            "type": "boolean"
          },
          "toPassengers": {
            "type": "boolean"
          },
          "toDrivers": {
            "type": "boolean"
          },
          "message": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GoogleLoginDto": {
        "type": "object",
        "properties": {
          "idToken": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDtos": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkAsReadDto": {
        "required": [
          "fromUserId",
          "tripId"
        ],
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "fromUserId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MessageDto": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "fromUserId": {
            "type": "integer",
            "format": "int32"
          },
          "toUserId": {
            "type": "integer",
            "format": "int32"
          },
          "messageText": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isRead": {
            "type": "boolean"
          },
          "fromUserName": {
            "type": "string",
            "nullable": true
          },
          "toUserName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResendOtpDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "otp": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendMessageDto": {
        "required": [
          "messageText",
          "toUserId",
          "tripId"
        ],
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "toUserId": {
            "type": "integer",
            "format": "int32"
          },
          "messageText": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SetActiveDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TypingDto": {
        "type": "object",
        "properties": {
          "toUserId": {
            "type": "integer",
            "format": "int32"
          },
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "isTyping": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateReportDto": {
        "type": "object",
        "properties": {
          "status": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "adminNotes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateReviewDto": {
        "type": "object",
        "properties": {
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateRouteDto": {
        "required": [
          "dropoffLocation",
          "pickupLocation"
        ],
        "type": "object",
        "properties": {
          "pickupLocation": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "dropoffLocation": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "isRoundTrip": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateTripDto": {
        "type": "object",
        "properties": {
          "vehicleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "seatTotal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pricePerSeat": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "priceFullRide": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "introduce": {
            "type": "string",
            "nullable": true
          },
          "university": {
            "type": "string",
            "nullable": true
          },
          "studentId": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateVehicleDto": {
        "type": "object",
        "properties": {
          "licensePlate": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "seatCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateVoucherDto": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "discountValue": {
            "minimum": 0.01,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "minOrderValue": {
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "usageLimit": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyOtpDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "otp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyVehicleDto": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter JWT Bearer token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}